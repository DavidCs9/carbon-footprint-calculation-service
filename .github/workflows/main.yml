name: EcoViz Backend CI/CD
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test-build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    
    - name: Install dependencies
      run: npm install
    
    - name: Run tests
      run: npm test
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: public
    
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: public.ecr.aws/b2v6g4u0
        ECR_REPOSITORY: carbon-footprint-service
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker buildx create --use
        docker buildx build --platform linux/amd64,linux/arm64 \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          --push .
    
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ec2-44-192-45-247.compute-1.amazonaws.com
        USER: ec2-user
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} '
          docker pull public.ecr.aws/b2v6g4u0/carbon-footprint-service:latest &&
          docker stop $(docker ps -q --filter ancestor=public.ecr.aws/b2v6g4u0/carbon-footprint-service) || true &&
          docker run -d --restart unless-stopped public.ecr.aws/b2v6g4u0/carbon-footprint-service:latest
        '
        rm -f private_key
